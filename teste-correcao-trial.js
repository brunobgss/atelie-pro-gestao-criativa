// Script para testar a corre√ß√£o do trial
// Execute no console do navegador ap√≥s fazer login

console.log("üß™ Testando corre√ß√£o do trial...");

// Fun√ß√£o para simular a l√≥gica corrigida
function testarL√≥gicaCorrigida(empresa) {
  console.log(`\nüîç Testando empresa: ${empresa?.nome || 'Sem empresa'}`);
  
  // Verificar se empresa existe
  if (!empresa) {
    console.log("‚è≥ Aguardando carregamento dos dados da empresa...");
    return { isExpired: false, shouldWait: true, isLoading: true };
  }

  // Verificar se trial_end_date existe
  if (!empresa?.trial_end_date) {
    console.log("‚è≥ Trial end date n√£o encontrado - aguardando carregamento completo...");
    return { isExpired: false, shouldWait: true, isLoading: true };
  }

  // Calcular se expirou
  const trialEnd = new Date(empresa.trial_end_date);
  const now = new Date();
  const isExpired = now > trialEnd;

  console.log("üìÖ Verifica√ß√£o:", {
    trialEndDate: empresa.trial_end_date,
    now: now.toISOString(),
    isExpired,
    diasRestantes: Math.ceil((trialEnd.getTime() - now.getTime()) / (1000 * 60 * 60 * 24))
  });

  return { isExpired, shouldWait: false, isLoading: false };
}

// Testar diferentes cen√°rios
const cenarios = [
  { nome: "Sem empresa", empresa: null },
  { nome: "Empresa sem trial_end_date", empresa: { id: "1", nome: "Teste", email: "test@test.com" } },
  { nome: "Empresa com trial v√°lido", empresa: { 
    id: "2", 
    nome: "Teste 2", 
    email: "test2@test.com", 
    trial_end_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() 
  }},
  { nome: "Empresa com trial expirado", empresa: { 
    id: "3", 
    nome: "Teste 3", 
    email: "test3@test.com", 
    trial_end_date: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString() 
  }}
];

console.log("üìä Testando cen√°rios:");
cenarios.forEach((cenario, index) => {
  console.log(`\n--- Cen√°rio ${index + 1}: ${cenario.nome} ---`);
  const resultado = testarL√≥gicaCorrigida(cenario.empresa);
  console.log("Resultado:", resultado);
});

console.log("\n‚úÖ Teste conclu√≠do!");
console.log("üí° A l√≥gica corrigida deve:");
console.log("1. Aguardar carregamento quando empresa √© null");
console.log("2. Aguardar carregamento quando trial_end_date √© null/undefined");
console.log("3. S√≥ bloquear quando trial_end_date existe e est√° expirado");
console.log("4. Permitir acesso quando trial_end_date existe e n√£o est√° expirado");